Из командной строки в каталог, где вы хотите сохранить код, затем выполните следующую команду:cd
    django-admin startproject mysite
При этом будет создан каталог в текущем каталоге. Если это не сработало, см. раздел Проблемы с запуском django-admin.mysite
________________________________________________
 Это не очень хорошо для безопасности./var/www
Поместите код в какой-либо каталог 


Давайте проверим, работает ваш проект Django. Перейдите во внешний каталог, если вы еще этого не сделали, и 
выполните следующие команды:mysite
    py manage.py runserver
    py manage.py runserver 8080 //на другом порту
________________________________________________
Чтобы создать приложение, убедитесь, что вы находитесь в том же каталоге, 
что и введите следующую команду:manage.py
    py manage.py startapp polls



Однако некоторые из этих приложений используют по крайней мере одну таблицу базы данных, 
поэтому нам нужно создать таблицы в базе данных, прежде чем мы сможем их использовать.
 Для этого выполните следующую команду:
    py manage.py migrate


Запуская, вы сообщаете Django, что внесли некоторые изменения в свои модели (в данном случае вы внесли новые) 
и что вы хотите, чтобы изменения были сохранены в виде миграции.makemigrations
    py .\manage.py makemigrations first_app


Есть команда, которая будет запускать миграции за вас и управлять вашей схемой базы данных автоматически - это называется migrate,
 и мы придем к ней через мгновение - но сначала давайте посмотрим, какой SQL будет выполняться при миграции. 
 Команда sqlmigrate принимает имена миграции и возвращает их SQL:
    py manage.py sqlmigrate polls 0001


nеперь запустите миграцию еще раз, чтобы создать эти таблицы моделей в базе данных:
    py manage.py migrate 



начала нам нужно будет создать пользователя, который может войти на сайт администратора. Выполните следующую команду:
    py manage.py createsuperuser


